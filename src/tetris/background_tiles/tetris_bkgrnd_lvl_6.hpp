#ifndef TETRIS_BKGRND_LVL_6_HPP
#define TETRIS_BKGRND_LVL_6_HPP

#include <array>
#include "common/utilities.hpp"
#include "../tetris_defs.hpp"

namespace tetris {

inline constexpr std::array TETRIS_BKGRND_LVL_6 { embp::pfold(
BLACK,BLACK,BLACK,BLACK,BLUE,BLACK,BLACK,GREEN,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,YELLOW,BLACK,BLACK,BLACK,BLACK,BLACK,
BLACK,BLACK,BLACK,BLACK,BLUE,BLACK,GREEN,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,YELLOW,BLACK,BLACK,BLACK,BLACK,BLACK,
BLACK,BLACK,BLACK,BLACK,BLUE,BLACK,BLACK,GREEN,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,YELLOW,BLACK,BLACK,BLACK,BLACK,BLUE,
BLUE,BLACK,BLACK,BLACK,BLUE,BLACK,BLACK,BLACK,GREEN,RED,BLACK,BLACK,BLACK,BLACK,YELLOW,BLACK,BLACK,BLACK,BLACK,BLUE,
BLUE,BLACK,BLACK,BLUE,BLACK,BLACK,BLACK,RED,BLACK,GREEN,RED,RED,BLACK,YELLOW,BLACK,BLACK,BLACK,BLACK,BLUE,BLACK,
BLACK,BLUE,BLACK,BLUE,BLACK,BLACK,RED,BLACK,BLACK,BLACK,GREEN,BLACK,RED,YELLOW,BLACK,BLACK,BLACK,BLACK,BLUE,BLACK,
BLACK,BLUE,BLACK,BLUE,BLACK,BLACK,RED,BLACK,YELLOW,YELLOW,GREEN,BLACK,BLACK,YELLOW,RED,BLACK,BLACK,BLUE,BLACK,BLACK,
BLACK,BLUE,BLUE,BLACK,BLACK,BLACK,YELLOW,YELLOW,BLACK,BLACK,YELLOW,BLACK,BLACK,YELLOW,BLACK,RED,BLACK,BLUE,BLACK,BLACK,
BLACK,BLUE,BLUE,GREEN,GREEN,RED,YELLOW,BLACK,BLACK,BLACK,BLACK,GREEN,BLACK,YELLOW,BLACK,BLACK,RED,BLACK,BLACK,BLACK,
BLACK,BLACK,BLUE,BLACK,RED,YELLOW,GREEN,GREEN,GREEN,GREEN,GREEN,YELLOW,GREEN,YELLOW,YELLOW,BLACK,BLUE,BLACK,BLACK,BLACK,
BLACK,BLACK,BLACK,YELLOW,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,YELLOW,BLACK,BLACK,BLACK,YELLOW,YELLOW,BLACK,BLACK,BLACK,
BLACK,YELLOW,RED,GREEN,BLACK,BLACK,BLACK,BLUE,BLUE,BLUE,BLACK,BLACK,YELLOW,BLACK,BLACK,BLUE,RED,BLACK,BLACK,BLACK,
BLACK,BLACK,RED,RED,RED,RED,BLUE,BLACK,BLACK,BLACK,BLUE,BLUE,YELLOW,BLACK,BLUE,BLACK,RED,BLACK,BLACK,BLACK,
BLACK,BLACK,BLACK,BLACK,YELLOW,YELLOW,RED,RED,RED,RED,RED,BLACK,BLUE,YELLOW,BLUE,YELLOW,RED,BLACK,BLACK,BLACK,
BLACK,BLACK,BLACK,BLACK,GREEN,BLACK,YELLOW,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,YELLOW,BLACK,BLACK,RED,BLACK,BLACK,BLACK,
BLACK,BLACK,BLACK,RED,RED,GREEN,BLUE,YELLOW,YELLOW,BLACK,BLACK,BLACK,YELLOW,BLACK,YELLOW,RED,BLACK,BLACK,BLACK,BLACK,
RED,RED,RED,BLACK,BLACK,BLUE,BLACK,BLACK,BLACK,YELLOW,YELLOW,YELLOW,BLACK,BLACK,YELLOW,RED,BLACK,BLACK,RED,RED,
BLACK,BLACK,BLACK,BLACK,BLACK,BLUE,GREEN,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,YELLOW,RED,RED,RED,BLACK,BLACK,
BLACK,BLACK,BLACK,BLACK,BLACK,BLUE,GREEN,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,YELLOW,RED,BLACK,BLACK,BLACK,BLACK,
BLACK,BLACK,BLACK,BLACK,BLUE,BLACK,BLACK,GREEN,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,YELLOW,BLACK,BLACK,BLACK,BLACK,BLACK
)};

inline constexpr screen::Tile TETRIS_BKGRND_LVL_6_TILE {
    .side_length = 20,
    .format = VIDEO_FORMAT,
    .data = std::data(TETRIS_BKGRND_LVL_6)
};

} // namespace tetris
#endif
