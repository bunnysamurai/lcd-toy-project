#ifndef TETRIS_BKGRND_LVL_8_HPP
#define TETRIS_BKGRND_LVL_8_HPP

#include <array>
#include "common/utilities.hpp"
#include "../tetris_defs.hpp"

namespace tetris {

inline constexpr std::array TETRIS_BKGRND_LVL_8 { embp::pfold(
BLACK,BLACK,BLACK,BLACK,YELLOW,YELLOW,YELLOW,YELLOW,YELLOW,YELLOW,YELLOW,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,MAGENTA,MAGENTA,MAGENTA,
BLACK,BLACK,BLACK,BLACK,YELLOW,YELLOW,YELLOW,YELLOW,YELLOW,YELLOW,YELLOW,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,MAGENTA,MAGENTA,MAGENTA,
BLACK,BLACK,BLACK,BLACK,YELLOW,YELLOW,YELLOW,YELLOW,YELLOW,YELLOW,YELLOW,BLACK,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,MAGENTA,
BLACK,BLACK,BLACK,BLACK,YELLOW,YELLOW,YELLOW,YELLOW,YELLOW,YELLOW,YELLOW,GREEN,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,MAGENTA,
BLACK,BLACK,BLACK,BLACK,YELLOW,YELLOW,YELLOW,YELLOW,YELLOW,YELLOW,YELLOW,GREEN,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,BLACK,
BLACK,BLACK,RED,RED,YELLOW,YELLOW,YELLOW,YELLOW,YELLOW,YELLOW,YELLOW,GREEN,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,BLACK,
BLACK,BLACK,RED,RED,RED,RED,RED,GREEN,GREEN,GREEN,GREEN,GREEN,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,BLACK,
BLACK,BLACK,RED,RED,RED,RED,RED,GREEN,GREEN,GREEN,GREEN,GREEN,GREEN,RED,RED,RED,BLACK,BLACK,BLACK,BLACK,
BLACK,BLACK,RED,RED,RED,RED,RED,GREEN,GREEN,GREEN,GREEN,GREEN,GREEN,RED,RED,RED,BLACK,BLACK,BLACK,BLACK,
BLACK,BLACK,RED,RED,RED,RED,RED,GREEN,GREEN,GREEN,GREEN,GREEN,GREEN,RED,RED,RED,BLACK,BLACK,BLACK,BLACK,
BLUE,BLUE,RED,RED,RED,RED,RED,GREEN,GREEN,GREEN,GREEN,GREEN,BLUE,BLUE,BLUE,BLUE,BLUE,BLUE,BLUE,BLUE,
BLUE,BLUE,RED,RED,RED,RED,RED,GREEN,GREEN,GREEN,GREEN,GREEN,BLUE,BLUE,BLUE,BLUE,BLUE,BLUE,BLUE,BLUE,
BLUE,CYAN,CYAN,CYAN,CYAN,CYAN,RED,GREEN,GREEN,GREEN,GREEN,GREEN,BLUE,BLUE,BLUE,BLUE,BLUE,BLUE,BLUE,BLUE,
BLUE,CYAN,CYAN,CYAN,CYAN,CYAN,BLACK,GREEN,GREEN,GREEN,GREEN,GREEN,BLUE,BLUE,BLUE,BLUE,BLUE,BLUE,BLUE,BLUE,
BLUE,CYAN,CYAN,CYAN,CYAN,CYAN,BLACK,GREEN,GREEN,GREEN,GREEN,GREEN,BLUE,BLUE,BLUE,BLUE,BLUE,BLUE,BLUE,BLUE,
BLUE,CYAN,CYAN,CYAN,CYAN,CYAN,BLACK,GREEN,GREEN,GREEN,GREEN,GREEN,BLUE,BLUE,BLUE,BLUE,BLUE,BLUE,BLUE,BLUE,
BLACK,CYAN,CYAN,CYAN,CYAN,CYAN,BLACK,GREEN,GREEN,GREEN,GREEN,GREEN,GREEN,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,
BLACK,CYAN,CYAN,CYAN,CYAN,CYAN,YELLOW,YELLOW,YELLOW,YELLOW,YELLOW,GREEN,GREEN,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,
BLACK,BLACK,BLACK,BLACK,YELLOW,YELLOW,YELLOW,YELLOW,YELLOW,YELLOW,YELLOW,GREEN,GREEN,BLACK,BLACK,BLACK,BLACK,MAGENTA,MAGENTA,MAGENTA,
BLACK,BLACK,BLACK,BLACK,YELLOW,YELLOW,YELLOW,YELLOW,YELLOW,YELLOW,YELLOW,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,MAGENTA,MAGENTA,MAGENTA
)};

inline constexpr screen::Tile TETRIS_BKGRND_LVL_8_TILE {
    .side_length = 20,
    .format = VIDEO_FORMAT,
    .data = std::data(TETRIS_BKGRND_LVL_8)
};

} // namespace tetris
#endif
