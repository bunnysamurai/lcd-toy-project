#ifndef TETRIS_BKGRND_LVL_9_HPP
#define TETRIS_BKGRND_LVL_9_HPP

#include <array>
#include "common/utilities.hpp"
#include "../tetris_defs.hpp"

namespace tetris {

inline constexpr std::array TETRIS_BKGRND_LVL_9 { embp::pfold(
DRKGRY,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,
DRKGRY,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,WHITE,DRKGRY,
DRKGRY,WHITE,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,DRKGRY,
DRKGRY,WHITE,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,DRKGRY,
DRKGRY,WHITE,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,DRKGRY,
DRKGRY,WHITE,LGREY,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,DRKGRY,
DRKGRY,WHITE,LGREY,BLACK,RED,RED,RED,RED,BLACK,CYAN,CYAN,CYAN,BLACK,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,DRKGRY,
DRKGRY,WHITE,LGREY,BLACK,RED,RED,RED,RED,BLACK,CYAN,CYAN,CYAN,BLACK,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,DRKGRY,
DRKGRY,WHITE,LGREY,BLACK,RED,RED,RED,RED,BLACK,CYAN,CYAN,CYAN,BLACK,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,DRKGRY,
DRKGRY,WHITE,LGREY,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,LGREY,DRKGRY,
DRKGRY,WHITE,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,BLACK,MAGENTA,MAGENTA,MAGENTA,BLACK,GREEN,GREEN,GREEN,GREEN,BLACK,LGREY,DRKGRY,
DRKGRY,WHITE,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,BLACK,MAGENTA,MAGENTA,MAGENTA,BLACK,GREEN,GREEN,GREEN,GREEN,BLACK,LGREY,DRKGRY,
DRKGRY,WHITE,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,BLACK,MAGENTA,MAGENTA,MAGENTA,BLACK,GREEN,GREEN,GREEN,GREEN,BLACK,LGREY,DRKGRY,
DRKGRY,WHITE,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,LGREY,DRKGRY,
DRKGRY,WHITE,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,DRKGRY,
DRKGRY,WHITE,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,DRKGRY,
DRKGRY,WHITE,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,DRKGRY,
DRKGRY,WHITE,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,LGREY,DRKGRY,
DRKGRY,WHITE,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,
DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY,DRKGRY
)};

inline constexpr screen::Tile TETRIS_BKGRND_LVL_9_TILE {
    .side_length = 20,
    .format = VIDEO_FORMAT,
    .data = std::data(TETRIS_BKGRND_LVL_9)
};

} // namespace tetris
#endif
